{"ast":null,"code":"import { TripAnalysisHelper } from '../../../helpers/trip-analysis-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/date.service\";\nimport * as i2 from \"../../../helpers/dashboard-helper\";\nimport * as i3 from \"../../../helpers/trip-analysis-helper\";\nconst _c0 = [\"chart\"];\nexport let TripAnalysisComponent = /*#__PURE__*/(() => {\n  class TripAnalysisComponent {\n    // fromDate: string;\n    // toDate: string;\n    // dumperIds = new FormControl();\n    // dumperList: string[] = [\n    //   'dumper1',\n    //   'dumper2',\n    //   'dumper3',\n    //   'dumper4',\n    //   'dumper5',\n    // ];\n    constructor(dateSetvice, dsahboardHelper, tripAnalysisHelper) {\n      this.dateSetvice = dateSetvice;\n      this.dsahboardHelper = dsahboardHelper;\n      this.tripAnalysisHelper = tripAnalysisHelper;\n      this.xAxisLabels = [];\n      this.yAxisData = [];\n      this.barWith = 50;\n    }\n\n    ngOnInit() {\n      this.getXaxisLabels();\n    }\n\n    ngOnChanges() {\n      this.fromDate = this.dateRange.fromDate;\n      this.toDate = this.dateRange.toDate;\n      console.log(`TripAnalysis_${this.fromDate}_${this.toDate}`);\n      this.barWith = 50;\n      if (this.dateRange.range && this.dateRange.range.length <= 5) this.barWith = 10;\n      this.getXaxisLabels();\n    }\n\n    getXaxisLabels() {\n      let chartData = this.tripAnalysisHelper.tripsByDate(this.dateRange.range, this.dateRange.tripsByDate);\n      this.xAxisLabels = chartData.xAxis;\n      this.yAxisData = chartData.yAxis;\n      this.barchartData();\n    }\n\n    barchartData() {\n      this.chartOptions = {\n        series: [{\n          name: \"Trips\",\n          data: this.yAxisData\n        }],\n        annotations: {\n          points: [{\n            x: \"\",\n            seriesIndex: 0,\n            label: {\n              borderColor: \"#775DD0\",\n              offsetY: 0,\n              style: {\n                color: \"#fff\",\n                background: \"#775DD0\"\n              },\n              text: \"test3\"\n            }\n          }]\n        },\n        chart: {\n          height: 350,\n          type: \"bar\",\n          toolbar: {\n            export: {\n              csv: {\n                filename: `TripAnalysis_${this.fromDate}_${this.toDate}`,\n                headerCategory: 'Date' // headerValue: 'value',\n\n              }\n            }\n          }\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: `${this.barWith}%`\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 1\n        },\n        grid: {\n          row: {\n            colors: [\"#fff\", \"#f2f2f2\"]\n          }\n        },\n        xaxis: {\n          // type: 'datetime',\n          // labels: {\n          //   rotate: -45\n          // },\n          categories: this.xAxisLabels // title: {\n          //   text: 'test1',\n          // }\n          // tickPlacement: \"between\"\n\n        },\n        yaxis: {\n          title: {\n            text: \"No. of Trips\"\n          }\n        },\n        fill: {// type: \"gradient\",\n          // gradient: {\n          //   shade: \"light\",\n          //   type: \"horizontal\",\n          //   shadeIntensity: 0.25,\n          //   gradientToColors: undefined,\n          //   inverseColors: true,\n          //   opacityFrom: 0.85,\n          //   opacityTo: 0.85,\n          //   stops: [50, 0, 100]\n          // }\n        }\n      };\n    }\n\n  }\n\n  TripAnalysisComponent.ɵfac = function TripAnalysisComponent_Factory(t) {\n    return new (t || TripAnalysisComponent)(i0.ɵɵdirectiveInject(i1.DateService), i0.ɵɵdirectiveInject(i2.DashboardHelper), i0.ɵɵdirectiveInject(i3.TripAnalysisHelper));\n  };\n\n  TripAnalysisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TripAnalysisComponent,\n    selectors: [[\"app-trip-analysis\"]],\n    viewQuery: function TripAnalysisComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    inputs: {\n      dateRange: \"dateRange\"\n    },\n    features: [i0.ɵɵProvidersFeature([TripAnalysisHelper]), i0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 10,\n    consts: [[1, \"row\", \"mb-3\"], [1, \"col-12\"], [\"id\", \"chart\"], [3, \"series\", \"chart\", \"dataLabels\", \"plotOptions\", \"yaxis\", \"xaxis\", \"stroke\", \"grid\", \"fill\", \"annotations\"]],\n    template: function TripAnalysisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-card\");\n        i0.ɵɵelementStart(3, \"mat-card-header\");\n        i0.ɵɵelementStart(4, \"mat-card-title\");\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"query_stats\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \" Trip Analysis \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-card-content\");\n        i0.ɵɵelementStart(9, \"div\", 2);\n        i0.ɵɵelement(10, \"apx-chart\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"plotOptions\", ctx.chartOptions.plotOptions)(\"yaxis\", ctx.chartOptions.yaxis)(\"xaxis\", ctx.chartOptions.xaxis)(\"stroke\", ctx.chartOptions.stroke)(\"grid\", ctx.chartOptions.grid)(\"fill\", ctx.chartOptions.fill)(\"annotations\", ctx.chartOptions.annotations);\n      }\n    },\n    styles: [\"\"]\n  });\n  return TripAnalysisComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}