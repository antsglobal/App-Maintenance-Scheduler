{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { ServiceConstants } from '../constants/ServiceConstants';\nimport { map } from 'rxjs/operators';\nimport { ENV_CONFIG } from 'src/environments/environment-config.interface';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../models/dashboardmodel\";\nexport let DashboardService = /*#__PURE__*/(() => {\n  class DashboardService {\n    constructor(http, config, _dDAapter, _rtAdapater, _dcAdapter) {\n      this.http = http;\n      this.config = config;\n      this._dDAapter = _dDAapter;\n      this._rtAdapater = _rtAdapater;\n      this._dcAdapter = _dcAdapter;\n      this.dashboardWidgetsApiUrl = ServiceConstants.baseurlv1 + '/dashboard';\n      this.recentTripsApiUrl = ServiceConstants.baseurlv1 + '/recenttrips';\n      this.devicesCountApiUrl = ServiceConstants.baseurlv1 + '/countofshovelsdumpers';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        })\n      };\n      this.apiBaseUrl = `${config.environment.apiUrl}`;\n    }\n\n    getDashboardWidgetsData(data) {\n      return this.http.post(this.apiBaseUrl + this.dashboardWidgetsApiUrl, data).pipe(map(response => {\n        return response['data'].map(item => {\n          return this._dDAapter.adapt(item);\n        });\n      }));\n    }\n\n    getRecentTrips() {\n      return this.http.get(this.apiBaseUrl + this.recentTripsApiUrl).pipe(map(response => {\n        return response.map(item => {\n          return this._rtAdapater.adapt(item);\n        });\n      }));\n    }\n\n    getDevicesCount() {\n      return this.http.get(this.apiBaseUrl + this.devicesCountApiUrl).pipe(map(response => {\n        return response.map(item => {\n          return this._dcAdapter.adapt(item);\n        });\n      }));\n    }\n\n  }\n\n  DashboardService.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(ENV_CONFIG), i0.ɵɵinject(i2.DashboardDataAdapter), i0.ɵɵinject(i2.RecentTripDataAdapter), i0.ɵɵinject(i2.DevicesCountAdapter));\n  };\n\n  DashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac,\n    providedIn: 'root'\n  });\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}