{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { IotDeviceComponent } from './iot-device/iot-device.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/snack-bar\";\n\nfunction IotDeviceMappingComponent_mat_header_cell_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 27);\n    i0.ɵɵtext(1, \"Id \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r18.id, \" \");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_cell_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 27);\n    i0.ɵɵtext(1, \" Device Sensor ID \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r19.deviceSensorId, \" \");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_cell_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 27);\n    i0.ɵɵtext(1, \" Device Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r20.deviceName, \" \");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_cell_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 27);\n    i0.ɵɵtext(1, \" Model Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r21.modelName, \" \");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_cell_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 27);\n    i0.ɵɵtext(1, \" Device Type \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r22.deviceType, \" \");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_cell_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 27);\n    i0.ɵɵtext(1, \" Status \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r23.status ? \"Active\" : \"Inactive\", \" \");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_cell_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 29);\n    i0.ɵɵtext(1, \" Actions \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_cell_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-cell\", 29);\n    i0.ɵɵelementStart(1, \"mat-icon\", 30);\n    i0.ɵɵlistener(\"click\", function IotDeviceMappingComponent_mat_cell_40_Template_mat_icon_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const element_r24 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      ctx_r25.pageState = \"Edit\";\n      return ctx_r25.iotDeviceMappingPopup(element_r24);\n    });\n    i0.ɵɵtext(2, \"edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_header_row_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\n\nfunction IotDeviceMappingComponent_mat_row_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 20];\n};\n\nexport let IotDeviceMappingComponent = /*#__PURE__*/(() => {\n  class IotDeviceMappingComponent {\n    constructor(dialog, _snackBar) {\n      this.dialog = dialog;\n      this._snackBar = _snackBar;\n      this.pageTitle = 'IoT Device Mapping';\n      this.status = true;\n      this.devices = [];\n      this.deviceData = new MatTableDataSource(this.devices);\n      this.displayedColumns = ['id', 'deviceSensorId', 'deviceName', 'modelName', 'deviceType', 'status', 'actions'];\n    }\n\n    ngOnInit() {\n      this.getData();\n    }\n\n    getData() {\n      this.devices = [{\n        'id': 1,\n        'deviceSensorId': '123sd123',\n        'deviceName': 'Device_1',\n        'modelName': 'PC200',\n        'deviceType': 'Loader',\n        'status': 1\n      }, {\n        'id': 2,\n        'deviceSensorId': '123sd123',\n        'deviceName': 'Device_2',\n        'modelName': 'PC200',\n        'deviceType': 'Loader',\n        'status': 1\n      }, {\n        'id': 3,\n        'deviceSensorId': '123sd123',\n        'deviceName': 'Device_3',\n        'modelName': 'PC300',\n        'deviceType': 'Driller',\n        'status': 0\n      }, {\n        'id': 4,\n        'deviceSensorId': '123sd123',\n        'deviceName': 'Device_4',\n        'modelName': 'PC300',\n        'deviceType': 'Driller',\n        'status': 1\n      }];\n      this.deviceData.data = this.devices;\n      this.onStatusChange();\n    }\n\n    ngAfterViewInit() {\n      this.deviceData.paginator = this.paginator;\n      this.deviceData.sort = this.sort;\n    }\n\n    applyFilter(filterValue) {\n      filterValue = filterValue.trim(); // Remove whitespace\n\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n\n      this.deviceData.filter = filterValue;\n    }\n\n    onStatusChange() {\n      this.filterAssetData(this.status);\n    }\n\n    filterAssetData(recordFilter) {\n      if (recordFilter == null) {\n        this.deviceData.data = this.devices;\n      } else {\n        let deviceFilterData = [];\n        this.devices.forEach(assetItem => {\n          if (recordFilter == true) {\n            recordFilter = 1;\n          } else {\n            recordFilter = 0;\n          }\n\n          if (recordFilter == assetItem.status) {\n            deviceFilterData.push(assetItem);\n          }\n        });\n        this.deviceData.data = deviceFilterData;\n      }\n    }\n\n    iotDeviceMappingPopup(deviceData = {}) {\n      console.log(this.pageState);\n      this.prermissionDialogRef = this.dialog.open(IotDeviceComponent, {\n        data: {\n          data: deviceData,\n          pageState: this.pageState\n        },\n        disableClose: true,\n        panelClass: \"custommodal\",\n        width: '500px'\n      });\n      this.prermissionDialogRef = this.prermissionDialogRef.afterClosed().subscribe(result => {\n        if (result.status) {\n          if (result.message) {\n            this.getData();\n            this.statusMessage(result.message, 'X');\n          }\n\n          this.dialog.closeAll();\n        }\n      });\n    }\n\n    statusMessage(message, action) {\n      this._snackBar.open(message, action, {\n        duration: 3000\n      });\n    }\n\n    editAsset() {}\n\n    deleteEmp() {}\n\n  }\n\n  IotDeviceMappingComponent.ɵfac = function IotDeviceMappingComponent_Factory(t) {\n    return new (t || IotDeviceMappingComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  IotDeviceMappingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IotDeviceMappingComponent,\n    selectors: [[\"app-iot-device-mapping\"]],\n    viewQuery: function IotDeviceMappingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 45,\n    vars: 10,\n    consts: [[1, \"mat-card-page\"], [1, \"mat-card-header-page\"], [1, \"mat-card-title-page\"], [1, \"mat-card-content-page\", \"p-2\"], [1, \"row\", \"m-0\", \"p-0\"], [1, \"col-12\"], [1, \"mx-2\", \"h-3\", \"mat-header-cell\"], [3, \"ngModel\", \"change\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 1, \"col-4\", \"btn-search\", \"float-right\", 3, \"click\"], [1, \"row\"], [\"matSort\", \"\", 3, \"dataSource\"], [\"table\", \"\"], [\"matColumnDef\", \"id\"], [\"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"px-1\", 4, \"matCellDef\"], [\"matColumnDef\", \"deviceSensorId\"], [\"matColumnDef\", \"deviceName\"], [\"matColumnDef\", \"modelName\"], [\"matColumnDef\", \"deviceType\"], [\"matColumnDef\", \"status\"], [\"matColumnDef\", \"actions\"], [\"class\", \"px-1 descriptive-info-second\", 4, \"matHeaderCellDef\"], [\"class\", \"px-1 descriptive-info-second\", 4, \"matCellDef\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"pageSize\", \"pageSizeOptions\", \"showFirstLastButtons\"], [\"paginator\", \"\"], [\"mat-sort-header\", \"\"], [1, \"px-1\"], [1, \"px-1\", \"descriptive-info-second\"], [\"matTooltip\", \"edit\", \"cursor\", \"pointer\", 3, \"click\"]],\n    template: function IotDeviceMappingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-header\", 1);\n        i0.ɵɵelementStart(2, \"mat-card-title\", 2);\n        i0.ɵɵelementStart(3, \"mat-icon\");\n        i0.ɵɵtext(4, \"devices_other\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-content\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"mat-label\", 6);\n        i0.ɵɵtext(10, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-slide-toggle\", 7);\n        i0.ɵɵlistener(\"change\", function IotDeviceMappingComponent_Template_mat_slide_toggle_change_11_listener() {\n          return ctx.onStatusChange();\n        })(\"ngModelChange\", function IotDeviceMappingComponent_Template_mat_slide_toggle_ngModelChange_11_listener($event) {\n          return ctx.status = $event;\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function IotDeviceMappingComponent_Template_button_click_13_listener() {\n          ctx.pageState = \"Create\";\n          return ctx.iotDeviceMappingPopup();\n        });\n        i0.ɵɵelementStart(14, \"mat-icon\");\n        i0.ɵɵtext(15, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9);\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵelementStart(18, \"mat-table\", 10, 11);\n        i0.ɵɵelementContainerStart(20, 12);\n        i0.ɵɵtemplate(21, IotDeviceMappingComponent_mat_header_cell_21_Template, 2, 0, \"mat-header-cell\", 13);\n        i0.ɵɵtemplate(22, IotDeviceMappingComponent_mat_cell_22_Template, 2, 1, \"mat-cell\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(23, 15);\n        i0.ɵɵtemplate(24, IotDeviceMappingComponent_mat_header_cell_24_Template, 2, 0, \"mat-header-cell\", 13);\n        i0.ɵɵtemplate(25, IotDeviceMappingComponent_mat_cell_25_Template, 2, 1, \"mat-cell\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(26, 16);\n        i0.ɵɵtemplate(27, IotDeviceMappingComponent_mat_header_cell_27_Template, 2, 0, \"mat-header-cell\", 13);\n        i0.ɵɵtemplate(28, IotDeviceMappingComponent_mat_cell_28_Template, 2, 1, \"mat-cell\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(29, 17);\n        i0.ɵɵtemplate(30, IotDeviceMappingComponent_mat_header_cell_30_Template, 2, 0, \"mat-header-cell\", 13);\n        i0.ɵɵtemplate(31, IotDeviceMappingComponent_mat_cell_31_Template, 2, 1, \"mat-cell\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(32, 18);\n        i0.ɵɵtemplate(33, IotDeviceMappingComponent_mat_header_cell_33_Template, 2, 0, \"mat-header-cell\", 13);\n        i0.ɵɵtemplate(34, IotDeviceMappingComponent_mat_cell_34_Template, 2, 1, \"mat-cell\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(35, 19);\n        i0.ɵɵtemplate(36, IotDeviceMappingComponent_mat_header_cell_36_Template, 2, 0, \"mat-header-cell\", 13);\n        i0.ɵɵtemplate(37, IotDeviceMappingComponent_mat_cell_37_Template, 2, 1, \"mat-cell\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(38, 20);\n        i0.ɵɵtemplate(39, IotDeviceMappingComponent_mat_header_cell_39_Template, 2, 0, \"mat-header-cell\", 21);\n        i0.ɵɵtemplate(40, IotDeviceMappingComponent_mat_cell_40_Template, 3, 0, \"mat-cell\", 22);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(41, IotDeviceMappingComponent_mat_header_row_41_Template, 1, 0, \"mat-header-row\", 23);\n        i0.ɵɵtemplate(42, IotDeviceMappingComponent_mat_row_42_Template, 1, 0, \"mat-row\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"mat-paginator\", 25, 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pageTitle, \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.status ? \" Active\" : \" Inactive\", \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"dataSource\", ctx.deviceData);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSize\", 5)(\"pageSizeOptions\", i0.ɵɵpureFunction0(9, _c0))(\"showFirstLastButtons\", true);\n      }\n    },\n    styles: [\"\"]\n  });\n  return IotDeviceMappingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}