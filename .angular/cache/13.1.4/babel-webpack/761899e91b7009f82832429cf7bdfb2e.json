{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Injectable, Inject, NgModule } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nvar BackButtonDisableModule_1;\n\nfunction _window() {\n  return window;\n}\n\nlet WindowRef = /*#__PURE__*/(() => {\n  let WindowRef = class WindowRef {\n    get nativeWindow() {\n      return _window();\n    }\n\n  };\n\n  WindowRef.ɵfac = function WindowRef_Factory(t) {\n    return new (t || WindowRef)();\n  };\n\n  WindowRef.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: WindowRef,\n    factory: function (t) {\n      return WindowRef.ɵfac(t);\n    }\n  });\n  return WindowRef;\n})();\nlet BackButtonDisableModule = BackButtonDisableModule_1 = class BackButtonDisableModule {\n  constructor(router, windowRef, preserveScrollPosition) {\n    this.router = router;\n    this.windowRef = windowRef;\n    this.preserveScrollPosition = preserveScrollPosition;\n    this.scrollX = 0;\n    this.scrollY = 0;\n    this.window = this.windowRef.nativeWindow;\n    this.disableBackButton();\n    this.addPopStateEventListener();\n  }\n\n  static forRoot(config) {\n    return {\n      ngModule: BackButtonDisableModule_1,\n      providers: [{\n        provide: 'preserveScrollPosition',\n        useValue: config && 'preserveScrollPosition' in config ? config.preserveScrollPosition : false\n      }]\n    };\n  }\n\n  addPopStateEventListener() {\n    this.window.addEventListener('popstate', () => {\n      if (this.preserveScrollPosition) this.getScrollCoordinates();\n      this.window.history.pushState(null, null, null);\n      if (this.preserveScrollPosition) setTimeout(this.scrollToThePreviousPosition.bind(this));\n    });\n  }\n\n  scrollToThePreviousPosition() {\n    this.window.scrollTo(this.scrollX, this.scrollY);\n  }\n\n  getScrollCoordinates() {\n    this.scrollX = this.window.scrollX;\n    this.scrollY = this.window.scrollY;\n  }\n\n  disableBackButton() {\n    this.window.history.pushState(null, null, null);\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.window.history.pushState(null, null, null);\n      }\n\n      ;\n    });\n  }\n\n};\n\nBackButtonDisableModule.ɵfac = function BackButtonDisableModule_Factory(t) {\n  return new (t || BackButtonDisableModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject('preserveScrollPosition'));\n};\n\nBackButtonDisableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BackButtonDisableModule\n});\nBackButtonDisableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [WindowRef]\n});\n\nBackButtonDisableModule.ctorParameters = () => [{\n  type: Router\n}, {\n  type: WindowRef\n}, {\n  type: Boolean,\n  decorators: [{\n    type: Inject,\n    args: ['preserveScrollPosition']\n  }]\n}];\n\nBackButtonDisableModule = BackButtonDisableModule_1 = __decorate([__param(2, Inject('preserveScrollPosition'))], BackButtonDisableModule);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BackButtonDisableModule, WindowRef }; //# sourceMappingURL=angular-disable-browser-back-button.js.map","map":null,"metadata":{},"sourceType":"module"}