{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dumper.service\";\n\nfunction DumperStatusComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const v_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", v_r6.deviceId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", v_r6.deviceMappingID, \" \");\n  }\n}\n\nfunction DumperStatusComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction DumperStatusComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Dumper details not found. \");\n  }\n}\n\nfunction DumperStatusComponent_ng_template_20_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"button\", 16);\n    i0.ɵɵtext(2, \" Loading \");\n    i0.ɵɵelement(3, \"span\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 16);\n    i0.ɵɵtext(5, \" Transit \");\n    i0.ɵɵelement(6, \"span\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 16);\n    i0.ɵɵtext(8, \" Unloading \");\n    i0.ɵɵelement(9, \"span\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"huge-icon mx-4 \", ctx_r7.dumperStates.loading, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"huge-icon mx-4 \", ctx_r7.dumperStates.transit, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"huge-icon mx-4 \", ctx_r7.dumperStates.unloading, \"\");\n  }\n}\n\nfunction DumperStatusComponent_ng_template_20_div_2_agm_map_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"agm-map\", 21);\n    i0.ɵɵelementStart(1, \"agm-marker\", 22);\n    i0.ɵɵlistener(\"markerClick\", function DumperStatusComponent_ng_template_20_div_2_agm_map_5_Template_agm_marker_markerClick_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return ctx_r10.clickedMarker();\n    })(\"dragEnd\", function DumperStatusComponent_ng_template_20_div_2_agm_map_5_Template_agm_marker_dragEnd_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return ctx_r12.markerDragEnd($event);\n    });\n    i0.ɵɵelement(2, \"agm-info-window\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"latitude\", ctx_r9.markers.lat)(\"longitude\", ctx_r9.markers.lng)(\"zoom\", ctx_r9.zoom)(\"disableDefaultUI\", false)(\"usePanning\", true)(\"zoomControl\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"latitude\", ctx_r9.markers.lat)(\"longitude\", ctx_r9.markers.lng)(\"label\", ctx_r9.markers.label)(\"markerDraggable\", ctx_r9.markers.draggable);\n  }\n}\n\nfunction DumperStatusComponent_ng_template_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelementStart(2, \"h5\");\n    i0.ɵɵelement(3, \"i\", 19);\n    i0.ɵɵtext(4, \" Track vechile here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DumperStatusComponent_ng_template_20_div_2_agm_map_5_Template, 3, 10, \"agm-map\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.fetchMapPosition);\n  }\n}\n\nfunction DumperStatusComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DumperStatusComponent_ng_template_20_div_0_Template, 10, 9, \"div\", 13);\n    i0.ɵɵelement(1, \"mat-divider\");\n    i0.ɵɵtemplate(2, DumperStatusComponent_ng_template_20_div_2_Template, 6, 1, \"div\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.fetchData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.fetchData);\n  }\n}\n\nexport let DumperStatusComponent = /*#__PURE__*/(() => {\n  class DumperStatusComponent {\n    constructor(dumperService) {\n      this.dumperService = dumperService;\n      this.fetchData = false; // google maps zoom level\n\n      this.zoom = 15;\n      this.fetchMapPosition = true; // initial center position for the map\n\n      this.lat = 17.45;\n      this.lng = 78.47;\n      this.markers = {\n        lat: 13.602386754765257,\n        lng: 79.41776506571027,\n        draggable: false\n      };\n      this.noDataFound = false;\n      this.refreshData = false;\n      this.destroyed$ = new ReplaySubject(1);\n    }\n\n    ngOnInit() {\n      this.getDeviceIds(); // this.getDumperData();\n    }\n\n    autoRefersh() {\n      if (this.refreshData) setTimeout(() => {\n        console.log('inside autorefresh');\n        this.getDumperData();\n        this.autoRefersh();\n      }, 20000);\n    }\n\n    getDumperData() {\n      // this.fetchData = false;\n      this.fetchMapPosition = false;\n      this.dumperStatusSub = this.dumperService.getDumperStatus(this.selectedDumperId).pipe(takeUntil(this.destroyed$)).subscribe(data => {\n        if (data) {\n          this.noDataFound = false;\n          this.dumperStatus = data['data']; // this.dumperStatus = data;\n\n          this.addMarker();\n          this.defineDumperStatus(this.dumperStatus['status'].toLowerCase());\n          this.fetchData = true;\n\n          if (!this.refreshData) {\n            this.refreshData = true;\n            this.autoRefersh();\n            console.log('inside getting data');\n          }\n        } else if (data === null) {\n          this.refreshData = true;\n          this.noDataFound = true;\n        }\n      }, error => {\n        this.noDataFound = true;\n        console.log(error);\n      });\n    }\n\n    defineDumperStatus(exp) {\n      this.dumperStates = {\n        loading: 'disabled',\n        transit: 'disabled',\n        unloading: 'disabled'\n      };\n\n      switch (exp) {\n        case 'tripend':\n          this.dumperStates.transit = 'inprogress';\n          this.dumperStates.unloading = 'complete';\n          break;\n\n        case 'unloading':\n          this.dumperStates.loading = 'complete';\n          this.dumperStates.transit = 'complete';\n          this.dumperStates.unloading = 'inprogress';\n          break;\n\n        case 'transit':\n          this.dumperStates.loading = 'complete';\n          this.dumperStates.transit = 'inprogress';\n          break;\n\n        case 'loading':\n          this.dumperStates.loading = 'inprogress';\n          break;\n      }\n    }\n\n    getDeviceIds() {\n      const newdumper = {\n        deviceCatagory: 'Dumper'\n      };\n      this.dumperService.getDeviceIds().subscribe({\n        next: dumperids => {\n          this.dumpers = dumperids['data'];\n        },\n        error: err => this.errorMessage = err\n      });\n    }\n\n    getDumperMappingId(dumperDeviceId) {\n      return this.dumpers.find(item => item.deviceId == dumperDeviceId);\n    }\n\n    clickedMarker() {// console.log(`clicked the marker:`)\n    }\n\n    addMarker(dumperLoc = this.dumperStatus) {\n      this.lat = parseInt(dumperLoc.latitude);\n      this.lng = parseInt(dumperLoc.longitude);\n      let dumperdetails = this.getDumperMappingId(this.selectedDumperId);\n      this.markers = {\n        lat: this.lat,\n        lng: this.lng,\n        label: dumperdetails.deviceMappingID,\n        draggable: false\n      };\n      this.fetchMapPosition = true;\n    }\n\n    markerDragEnd($event) {\n      console.log('dragEnd', $event);\n    }\n\n    ngOnDestroy() {\n      this.refreshData = false;\n      this.destroyed$.next(true);\n      this.destroyed$.complete();\n    }\n\n  }\n\n  DumperStatusComponent.ɵfac = function DumperStatusComponent_Factory(t) {\n    return new (t || DumperStatusComponent)(i0.ɵɵdirectiveInject(i1.DumperService));\n  };\n\n  DumperStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DumperStatusComponent,\n    selectors: [[\"app-dumper-status\"]],\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"mat-card-page\"], [1, \"mat-card-header-page\"], [1, \"mat-card-title-page\"], [1, \"mat-card-content-page\", \"p-2\"], [1, \"row\", \"m-0\", \"p-0\"], [\"appearance\", \"outline\", 1, \"col-4\"], [\"multiple\", \"false\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", 1, \"col-2\", \"btn-search\", 3, \"click\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"noDumperDataFound\", \"\"], [\"dumperDataFound\", \"\"], [3, \"value\"], [\"class\", \"col-12 m-4\", 4, \"ngIf\"], [\"class\", \"col-md-12 map\", 4, \"ngIf\"], [1, \"col-12\", \"m-4\"], [\"mat-fab\", \"\"], [1, \"pulse\"], [1, \"col-md-12\", \"map\"], [1, \"fa\", \"fa-map-marker\"], [3, \"latitude\", \"longitude\", \"zoom\", \"disableDefaultUI\", \"usePanning\", \"zoomControl\", 4, \"ngIf\"], [3, \"latitude\", \"longitude\", \"zoom\", \"disableDefaultUI\", \"usePanning\", \"zoomControl\"], [3, \"latitude\", \"longitude\", \"label\", \"markerDraggable\", \"markerClick\", \"dragEnd\"]],\n    template: function DumperStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-header\", 1);\n        i0.ɵɵelementStart(2, \"mat-card-title\", 2);\n        i0.ɵɵelementStart(3, \"mat-icon\");\n        i0.ɵɵtext(4, \"rotate_left\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" Dumper Status \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-content\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Select DumperId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function DumperStatusComponent_Template_mat_select_ngModelChange_11_listener($event) {\n          return ctx.selectedDumperId = $event;\n        });\n        i0.ɵɵtemplate(12, DumperStatusComponent_mat_option_12_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function DumperStatusComponent_Template_button_click_13_listener() {\n          ctx.fetchData = false;\n          return ctx.getDumperData();\n        });\n        i0.ɵɵelementStart(14, \"mat-icon\");\n        i0.ɵɵtext(15, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"mat-divider\");\n        i0.ɵɵtemplate(17, DumperStatusComponent_div_17_Template, 1, 0, \"div\", 9);\n        i0.ɵɵtemplate(18, DumperStatusComponent_ng_template_18_Template, 1, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(20, DumperStatusComponent_ng_template_20_Template, 3, 2, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(19);\n\n        const _r4 = i0.ɵɵreference(21);\n\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedDumperId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dumpers);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.noDataFound)(\"ngIfThen\", _r2)(\"ngIfElse\", _r4);\n      }\n    },\n    styles: [\"\"]\n  });\n  return DumperStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}