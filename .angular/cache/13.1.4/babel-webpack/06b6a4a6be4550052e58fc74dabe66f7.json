{"ast":null,"code":"export class AssetHelper {\n  /**\r\n   * formats the API response and prepare the object with counts and\r\n   * list of assets by each room and by each asset.\r\n   *\r\n   * @param data The Raw API response object\r\n   * @returns  assetsData: AssetDetail[]\r\n   */\n  assetsByLocation(data, getTotalAssetCount = false) {\n    let assetsData = [];\n    let totalAssetCount = 0;\n\n    if (data) {\n      data.map(item => {\n        let itemIndex = this.isAssetExists(assetsData, item.AssetName);\n\n        if (itemIndex == -1) {\n          let asset = {\n            AssetName: item.AssetName,\n            AssetCount: 1,\n            AssetList: [item]\n          };\n          assetsData.push(asset);\n        } else {\n          assetsData[itemIndex].AssetCount = assetsData[itemIndex].AssetCount + 1;\n          assetsData[itemIndex].AssetList.push(item);\n        }\n\n        totalAssetCount = totalAssetCount + 1;\n      });\n    }\n\n    return {\n      data: assetsData,\n      totalCount: totalAssetCount\n    };\n  }\n  /**\r\n   *\r\n   * @param list Array of asset\r\n   * @param searchItem search string (searches list by given asset name)\r\n   * @returns index of the asset\r\n   */\n\n\n  isAssetExists(list, searchItem) {\n    let index = list.findIndex(item => item.AssetName == searchItem);\n    return index;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}